apiVersion: apps/v1
kind: Deployment
metadata:
  name: rustypaste
  labels:
    app: rustypaste
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rustypaste
  template:
    metadata:
      labels:
        app: rustypaste
    spec:
      containers:
        - image: orhunp/rustypaste
          imagePullPolicy: IfNotPresent
          name: rustypaste
          env:
            - name: RUST_LOG
              value: debug
          envFrom:
            - secretRef:
                name: creds
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /app/config.toml
              subPath: config.toml
            - name: upload
              mountPath: /app/upload
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
      volumes:
        - name: config
          configMap:
            name: config
            items:
              - key: config.toml
                path: config.toml
        - name: upload
          persistentVolumeClaim:
            claimName: upload
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: upload
  labels:
    backup: "true"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5G
  storageClassName: hostpath-csi
---
apiVersion: v1
kind: Service
metadata:
  name: rustypaste
  labels:
    app: rustypaste
spec:
  selector:
    app: rustypaste
  type: ClusterIP
  ports:
    - name: http
      port: 8000
      protocol: TCP
      targetPort: 8000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config
  labels:
    app: rustypaste
data:
  config.toml: |
    [config]
    refresh_rate = "1s"

    [server]
    address = "127.0.0.1:8000"
    url = "https://files.imdevinc.com"
    #workers=4
    max_content_length = "1024MB"
    upload_path = "./upload"
    timeout = "30s"
    expose_version = false
    expose_list = false
    #auth_tokens = [
    #  "super_secret_token1",
    #  "super_secret_token2",
    #]
    #delete_tokens = [
    #  "super_secret_token1",
    #  "super_secret_token3",
    #]
    handle_spaces = "replace" # or "encode"

    [landing_page]
    text = """
    ┬─┐┬ ┬┌─┐┌┬┐┬ ┬┌─┐┌─┐┌─┐┌┬┐┌─┐
    ├┬┘│ │└─┐ │ └┬┘├─┘├─┤└─┐ │ ├┤
    ┴└─└─┘└─┘ ┴  ┴ ┴  ┴ ┴└─┘ ┴ └─┘
    """
    #file = "index.txt"
    content_type = "text/plain; charset=utf-8"

    [paste]
    random_url = { type = "petname", words = 2, separator = "-" }
    #random_url = { type = "alphanumeric", length = 8 }
    #random_url = { type = "alphanumeric", length = 8, no_extension = true }
    #random_url = { type = "alphanumeric", length = 6, suffix_mode = true }
    default_extension = "txt"
    mime_override = [
      { mime = "image/jpeg", regex = "^.*\\.jpg$" },
      { mime = "image/png", regex = "^.*\\.png$" },
      { mime = "image/svg+xml", regex = "^.*\\.svg$" },
      { mime = "video/webm", regex = "^.*\\.webm$" },
      { mime = "video/x-matroska", regex = "^.*\\.mkv$" },
      { mime = "application/octet-stream", regex = "^.*\\.bin$" },
      { mime = "text/plain", regex = "^.*\\.(log|txt|diff|sh|rs|toml)$" },
    ]
    mime_blacklist = [
      "application/x-dosexec",
      "application/java-archive",
      "application/java-vm",
    ]
    duplicate_files = true
    default_expiry = "1M"
    #delete_expired_files = { enabled = true, interval = "1h" }
