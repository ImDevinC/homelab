apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
spec:
  serviceAccountName: prometheus
  enableRemoteWriteReceiver: true
  ruleSelector: {}
  ruleNamespaceSelector: {}
  externalUrl: prometheus.collins.home
  alerting:
    alertmanagers:
      - name: alertmanager-operated
        port: web
        namespace: monitoring
  tsdb:
    outOfOrderTimeWindow: 10m
  securityContext:
    fsGroup: 2000
    runAsUser: 1000
    runAsNonRoot: true
  storage:
    volumeClaimTemplate:
      spec:
        storageClassName: hostpath-csi
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus
spec:
  ingressClassName: nginx
  rules:
    - host: prometheus.collins.home
      http:
        paths:
          - backend:
              service:
                name: prometheus-operated
                port:
                  name: web
            path: /
            pathType: ImplementationSpecific
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs: ["get", "list", "watch"]
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
---
