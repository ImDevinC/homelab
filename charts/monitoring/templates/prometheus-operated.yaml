apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
spec:
  serviceAccountName: prometheus
  enableRemoteWriteReceiver: true
  ruleSelector: {}
  ruleNamespaceSelector: {}
  probeSelector: {} # We don't use probes, but instead of having to supply a whole config, we enable this
  externalUrl: prometheus.int.imdevinc.com
  retention: 30d
  alerting:
    alertmanagers:
      - name: alertmanager-operated
        port: web
        namespace: monitoring
  tsdb:
    outOfOrderTimeWindow: 10m
  securityContext:
    fsGroup: 2000
    runAsUser: 1000
    runAsNonRoot: true
  storage:
    volumeClaimTemplate:
      spec:
        storageClassName: hostpath-csi
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50Gi
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: prometheus
  annotations:
    gethomepage.dev/enabled: "true"
    gethomepage.dev/group: Management
    gethomepage.dev/icon: prometheus.png
    gethomepage.dev/name: Prometheus
spec:
  parentRefs:
  - name: traefik-gateway
    namespace: traefik
    group: gateway.networking.k8s.io
    kind: Gateway
  hostnames:
  - prometheus.int.imdevinc.com
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: prometheus-operated
      namespace: monitoring
      port: 9090
      group: ''
      kind: Service
      weight: 1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs: ["get", "list", "watch"]
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
---
