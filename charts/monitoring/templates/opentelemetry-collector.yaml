---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otelcol
spec:
  mode: statefulset
  serviceAccount: opentelemetry-allocator-sa
  targetAllocator:
    enabled: true
    serviceAccount: opentelemetry-allocator-sa
    prometheusCR:
      enabled: true
      podMonitorSelector: {}
      serviceMonitorSelector: {}
  config:
    receivers:
      prometheus:
        config:
          scrape_configs:
            - job_name: otel-collector
              scrape_interval: 10s
              static_configs:
                - targets: ['0.0.0.0:8888']
            - job_name: node-exporter
              static_configs:
                - targets: ['archlinux:9100', 'pi.hole:9100']
            - job_name: nvidia-smi
              static_configs:
                - targets: ['archlinux:9835']
            - job_name: rpi
              static_configs:
                - targets: ['pi.hole:9110']
            - job_name: fail2ban
              static_configs:
                - targets: ['pi.hole:9191']
            - job_name: crowdsec
              static_configs:
                - targets: ['pi.hole:6060', 'pi.hole:60601']

    processors:
      batch: {}
      attributes/cluster:
        actions:
          - key: cluster
            value: k8s
            action: insert

    exporters:
      prometheusremotewrite:
        endpoint: http://prometheus-operated:9090/api/v1/write
        tls:
          insecure: true

    service:
#      telemetry:
#        logs:
#          level: DEBUG
      pipelines:
        metrics:
          receivers: [prometheus]
          processors: [attributes/cluster,batch]
          exporters: [prometheusremotewrite]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: opentelemetry-allocator-role
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/metrics
      - services
      - endpoints
      - pods
      - namespaces
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
      - secrets
    verbs: ["get"]
  - apiGroups: ["discovery.k8s.io"]
    resources:
      - endpointslices
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics", "/metrics/cadvisor"]
    verbs: ["get"]
  - apiGroups: ["monitoring.coreos.com"]
    resources:
      - servicemonitors
      - podmonitors
      - scrapeconfigs
      - probes
    verbs: ["*"]
  - apiGroups: ["cert-manager.io"]
    resources:
      - issuers
      - certificaterequests
      - certificates
    verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: opentelemetry-allocator-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opentelemetry-allocator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opentelemetry-allocator-role
subjects:
  - kind: ServiceAccount
    name: opentelemetry-allocator-sa
    namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name:  opentelemetry-operator-controller-manager-cert-manager-role
rules:
- apiGroups:
  - cert-manager.io
  resources:
  - issuers
  - certificaterequests
  - certificates
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: opentelemetry-operator-controller-manager-cert-manager-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: opentelemetry-operator-controller-manager-cert-manager-role
subjects:
  - kind: ServiceAccount
    name: opentelemetry-operator
    namespace: monitoring
