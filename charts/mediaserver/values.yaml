k8s-mediaserver:
  general:
    ingress_host: media.collins.home
    storage:
      customVolume: true
      size: 10Gi
      subPaths:
        comics: media/comics
        tv: media/tv
        movies: media/movies
        downloads: downloads
        transmission: transmission
        sabnzbd: sabnzbd
        config: config
      volumes:
        hostPath:
          path: /mnt/media
  jackett:
    enabled: false
  plex:
    claim: claim-s4H5aSxbCoi8s7_R_q_X
    container:
      tag: 1.32.2
    hostNetwork: true
    ingress:
      enabled: false
    resources:
      limits:
        nvidia.com/gpu: 1
    extraVolumeMounts:
      - name: mediaserver-volume
        mountPath: /anime
        subPath: media/anime
  prowlarr:
    ingress:
      enabled: false
  radarr:
    resources:
      limits:
        memory: "1Gi"
    ingress:
      enabled: true
      path: "/"
      ingressClassName: nginx
      host: radarr.collins.home
      annotations:
        nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
        nginx.ingress.kubernetes.io/auth-signin: http://radarr.collins.home/outpost.goauthentik.io/start?rd=$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,authorization
        nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
    exportarr:
      enabled: true
      serviceMonitor: true
      apiSecret: radarr-token
      urlBase: /radarr
  sabnzbd:
    ingress:
      enabled: false
  sonarr:
    resources:
      limits:
        memory: "1Gi"
    extraVolumeMounts:
      - name: mediaserver-volume
        mountPath: /anime
        subPath: media/anime
    ingress:
      enabled: false
    exportarr:
      enabled: true
      serviceMonitor: true
      apiSecret: sonarr-token
      urlBase: /sonarr
  transmission:
    ingress:
      enabled: false
  tautulli:
    ingress:
      enabled: false
  requestrr:
    ingress:
      enabled: false
  overseerr:
    ingress:
      enabled: false
  mylarr:
    container:
      image: lscr.io/linuxserver/mylar3
      tag: 0.8.0
    ingress:
      enabled: false
    exportarr:
      enabled: false

ingress:
  enabled: true
  className: nginx
  #  annotations:
  #    nginx.ingress.kubernetes.io/auth-url: http://authentik-server.authentik.svc.cluster.local/outpost.goauthentik.io/auth/nginx
  #    nginx.ingress.kubernetes.io/auth-signin: http://authentik.collins.home/outpost.goauthentik.io/start?rd=$escaped_request_uri
  #    nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
  #    nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
  hosts:
    - host: overseerr.collins.home
      paths:
        - path: /
          serviceName: overseerr
          servicePort: 5055
    - host: media.collins.home
      paths:
        - path: /prowlarr
          serviceName: prowlarr
          servicePort: 9696
        - path: /radarr
          serviceName: radarr
          servicePort: 7878
        - path: /sabnzbd
          serviceName: sabnzbd
          servicePort: 8080
        - path: /sonarr
          serviceName: sonarr
          servicePort: 8989
        - path: /transmission
          serviceName: transmission
          servicePort: 9091
        - path: /tautulli
          serviceName: tautulli
          servicePort: 8181
        - path: /requestrr
          serviceName: requestrr
          servicePort: 4545
        - path: /mylarr
          serviceName: mylarr
          servicePort: 8090
